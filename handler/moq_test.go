// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package handler

import (
	"context"
	"github.com/yuyacode/AppLiftMessageApi/entity"
	"sync"
)

// Ensure, that GetMessageServiceMock does implement GetMessageService.
// If this is not the case, regenerate this file with moq.
var _ GetMessageService = &GetMessageServiceMock{}

// GetMessageServiceMock is a mock implementation of GetMessageService.
//
//	func TestSomethingThatUsesGetMessageService(t *testing.T) {
//
//		// make and configure a mocked GetMessageService
//		mockedGetMessageService := &GetMessageServiceMock{
//			GetAllMessagesFunc: func(ctx context.Context, messageThreadID entity.MessageThreadID) (entity.Messages, error) {
//				panic("mock out the GetAllMessages method")
//			},
//		}
//
//		// use mockedGetMessageService in code that requires GetMessageService
//		// and then make assertions.
//
//	}
type GetMessageServiceMock struct {
	// GetAllMessagesFunc mocks the GetAllMessages method.
	GetAllMessagesFunc func(ctx context.Context, messageThreadID entity.MessageThreadID) (entity.Messages, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetAllMessages holds details about calls to the GetAllMessages method.
		GetAllMessages []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// MessageThreadID is the messageThreadID argument value.
			MessageThreadID entity.MessageThreadID
		}
	}
	lockGetAllMessages sync.RWMutex
}

// GetAllMessages calls GetAllMessagesFunc.
func (mock *GetMessageServiceMock) GetAllMessages(ctx context.Context, messageThreadID entity.MessageThreadID) (entity.Messages, error) {
	if mock.GetAllMessagesFunc == nil {
		panic("GetMessageServiceMock.GetAllMessagesFunc: method is nil but GetMessageService.GetAllMessages was just called")
	}
	callInfo := struct {
		Ctx             context.Context
		MessageThreadID entity.MessageThreadID
	}{
		Ctx:             ctx,
		MessageThreadID: messageThreadID,
	}
	mock.lockGetAllMessages.Lock()
	mock.calls.GetAllMessages = append(mock.calls.GetAllMessages, callInfo)
	mock.lockGetAllMessages.Unlock()
	return mock.GetAllMessagesFunc(ctx, messageThreadID)
}

// GetAllMessagesCalls gets all the calls that were made to GetAllMessages.
// Check the length with:
//
//	len(mockedGetMessageService.GetAllMessagesCalls())
func (mock *GetMessageServiceMock) GetAllMessagesCalls() []struct {
	Ctx             context.Context
	MessageThreadID entity.MessageThreadID
} {
	var calls []struct {
		Ctx             context.Context
		MessageThreadID entity.MessageThreadID
	}
	mock.lockGetAllMessages.RLock()
	calls = mock.calls.GetAllMessages
	mock.lockGetAllMessages.RUnlock()
	return calls
}
